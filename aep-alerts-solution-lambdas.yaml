AWSTemplateFormatVersion: '2010-09-09'
Description: All AWS resources for the Alerts Solution per Stage (dev/QA/Prod)
Parameters:
  Namespace:
    Type: String
    Default: alerts
    Description: Namespace for resource names - MUST BE LOWERCASE
  Stage:
    Type: String
    Description: Stage for resource names - MUST BE LOWERCASE
Mappings:
  RegionMap:
    us-east-1:
      REGION: e1
    us-west-1:
      REGION: w1
    us-east-2:
      REGION: e2
    us-west-2:
      REGION: w2
  Environment:
    pa:
      Subnets:
        - subnet-07be4de00807b7c23
        - subnet-08d31841f8fe54c65
        - subnet-0baa3fb4d2d923e20
        - subnet-0e2b23502d48125cc
        - subnet-0ebe6ee4bc8c6cfca
        - subnet-04afc5811679c5008
      SGs:
        - sg-0104b4ca1fdeb929c
    dev:
      Subnets:
        - subnet-07be4de00807b7c23
        - subnet-08d31841f8fe54c65
        - subnet-0baa3fb4d2d923e20
        - subnet-0e2b23502d48125cc
        - subnet-0ebe6ee4bc8c6cfca
        - subnet-04afc5811679c5008
      SGs:
        - sg-0104b4ca1fdeb929c
    qa:
      Subnets:
        - subnet-0c3ae96e12b8fb3a9
        - subnet-096a4ab6680b37206
        - subnet-0317e30219ed6ef40
        - subnet-054a2eac04cc54851
        - subnet-0e1124662f0d33b85
        - subnet-079b50bb436b4a700
      SGs:
        - sg-000f671b12164e985
    prod:
      Subnets:
        - subnet-0c3ae96e12b8fb3a9
        - subnet-096a4ab6680b37206
        - subnet-0317e30219ed6ef40
        - subnet-054a2eac04cc54851
        - subnet-0e1124662f0d33b85
        - subnet-079b50bb436b4a700
      SGs:
        - sg-06e706217907f0b6b
Conditions:
  CreateProdResources: !Equals
    - !Ref 'Stage'
    - prod
Resources:
  # -----------------------------------------------------------------------------------
  # The LAMBDA functions start here!!!
  # -----------------------------------------------------------------------------------
  ProcessBatchOutagesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-outage-batch-landing'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.ProcessBatchOutages::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 360
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-batch-landing'
      Environment:
        Variables:
          OUTAGE_RAW_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-raw-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessPartialBatchOutagesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-outage-partial-batch-processor'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.OutageEventsBatchProcessor::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 1024
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-partial-batch-processor'
      Environment:
        Variables:
          OUTAGE_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_MOMENTARY_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_RESTORED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-restored-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_BATCH_STATISTICS_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-batch-statistics-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          MOMENTARY_WAIT_THRESHOLD_IN_MINUTES: '10'
  ProcessOutagesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-outage-batch-processor'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.ProcessOutages::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-batch-processor'
      Environment:
        Variables:
          OUTAGE_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_MOMENTARY_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_RESTORED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-restored-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_BATCH_STATISTICS_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-batch-statistics-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          MOMENTARY_WAIT_THRESHOLD_IN_MINUTES: '10'
          PARTIAL_BATCH_SIZE: '200'
          OUTAGE_EVENTS_PARTIAL_BATCH_PROCESSOR: !Sub '${Namespace}-outage-partial-batch-processor'
  LandingPreferencesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-preferences-batch-landing'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.LoadPreferences2S3Handler::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-preferences-batch-landing'
      Environment:
        Variables:
          PREFERENCES_RAW_BUCKET: !Sub
            - ${Stage}-${Namespace}-preferences-raw-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessPreferencesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-preferences-batch-processor'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.Preferences2DynamoDBHandler::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 300
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-preferences-batch-processor'
      Environment:
        Variables:
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-order-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          
  BuildSustainedNotificationsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-notification-sustained-content-builder'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.ProcessSustainedOutages::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-notification-sustained-content-builder'
      Environment:
        Variables:
          NOTIFICATION_EMAIL_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - '${Stage}-${Namespace}-notification-message-history-per-premise-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NO_PREFERENCES: !Sub
            - '${Stage}-${Namespace}-no-subscriptions-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_FAILED_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-failed-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  BuildRestoredNotificationsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-notification-restored-content-builder'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.ProcessRestoredOutages::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-notification-restored-content-builder'
      Environment:
        Variables:
          NOTIFICATION_EMAIL_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - '${Stage}-${Namespace}-notification-message-history-per-premise-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NO_PREFERENCES: !Sub
            - '${Stage}-${Namespace}-no-subscriptions-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_FAILED_RESTORED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-failed-restored-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]  
  ProcessMomentaryFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-momentary-outages-processor'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.MomentaryProcessor::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-momentary-outages-processor'
      Environment:
        Variables:
          OUTAGE_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_MOMENTARY_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          MOMENTARY_WAIT_THRESHOLD_IN_MINUTES: '10'
  EmailSenderFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-outage-email-notification-sender'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.SendEmailNotificationsHandler::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-email-notification-sender'
      Environment:
        Variables:
          DELIVERY_TYPE_EMAIL: EMAIL-DELIVERY
      VpcConfig:
        SecurityGroupIds: !FindInMap [Environment, !Ref Stage, SGs]
        SubnetIds: !FindInMap [Environment, !Ref Stage, Subnets]
  SMSSenderFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-outage-sms-notification-sender'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.SendSMSNotificationsHandler::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-sms-notification-sender'
      Environment:
        Variables:
          DELIVERY_TYPE_SMS: TEXT-DELIVERY
      VpcConfig:
        SecurityGroupIds: !FindInMap [Environment, !Ref Stage, SGs]
        SubnetIds: !FindInMap [Environment, !Ref Stage, Subnets] 
  EmailBatcherFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-outage-email-notifications-batcher'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.BatchEmailNotifications::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-email-notifications-batcher'
      Environment:
        Variables:
          NOTIFICATION_BATCH_SIZE: '500'
          NOTIFICATION_EMAIL_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BATCHED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-email-content-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  SMSBatcherFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-outage-sms-notifications-batcher'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.BatchSMSNotifications::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-sms-notifications-batcher'
      Environment:
        Variables:
          NOTIFICATION_BATCH_SIZE: '500'
          NOTIFICATION_SMS_BATCHED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sms-content-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  HistoryNotificationSender:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-outage-message-history-notification-sender'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.SendMessageHistoryHandler::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-message-history-notification-sender'
      Environment:
        Variables:
          DELIVERY_TYPE_MACSS_HISTORY: MACSS-HISTORY
      VpcConfig:
        SecurityGroupIds: !FindInMap [Environment, !Ref Stage, SGs]
        SubnetIds: !FindInMap [Environment, !Ref Stage, Subnets]
  HistoryNotificationBatcher:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-outage-message-history-notifications-batcher'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.BatchMessageHistoryNotifications::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-message-history-notifications-batcher'
      Environment:
        Variables:
          NOTIFICATION_BATCH_SIZE: '500'
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - '${Stage}-${Namespace}-notification-message-history-per-premise-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_MESSAGE_HISTORY_BATCHED_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-history-content-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  MomentaryWrapperFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-momentary-outages-wrapper'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.FetchListOfKeysFromS3Wrapper::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-momentary-outages-wrapper'
      Environment:
        Variables:
          OUTAGE_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_MOMENTARY_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          BUCKET_NM_TO_FETCH_KEYS: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          LAMBDA_TO_INVOKE: !Sub '${Namespace}-momentary-outages-processor'
  MomentaryWrapperFunctionScheduledEventTrigger:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      Targets:
        - Id: MomentaryWrapperFunctionScheduledEventTriggerLambdaTarget
          Arn: !GetAtt 'MomentaryWrapperFunction.Arn'
  MomentaryWrapperFunctionScheduledEventTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: events.amazonaws.com
      FunctionName: !Ref 'MomentaryWrapperFunction'
      SourceArn: !GetAtt 'MomentaryWrapperFunctionScheduledEventTrigger.Arn'
  EmailOutagesWrapperFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-email-outages-wrapper'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.FetchListOfKeysFromS3Wrapper::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-email-outages-wrapper'
      Environment:
        Variables:
          OUTAGE_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_MOMENTARY_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          BUCKET_NM_TO_FETCH_KEYS: !Sub
            - '${Stage}-${Namespace}-notification-email-per-premise-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          LAMBDA_TO_INVOKE: !Sub '${Namespace}-outage-email-notifications-batcher'
  EmailOutagesWrapperFunctionScheduledEventTrigger:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      Targets:
        - Id: EmailOutagesWrapperFunctionScheduledEventTriggerLambdaTarget
          Arn: !GetAtt 'EmailOutagesWrapperFunction.Arn'
  EmailOutagesWrapperFunctionScheduledEventTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: events.amazonaws.com
      FunctionName: !Ref 'EmailOutagesWrapperFunction'
      SourceArn: !GetAtt 'EmailOutagesWrapperFunctionScheduledEventTrigger.Arn'
  SmsOutagesWrapperFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-sms-outages-wrapper'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.FetchListOfKeysFromS3Wrapper::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-sms-outages-wrapper'
      Environment:
        Variables:
          OUTAGE_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_MOMENTARY_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          BUCKET_NM_TO_FETCH_KEYS: !Sub
            - '${Stage}-${Namespace}-notification-sms-per-premise-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          LAMBDA_TO_INVOKE: !Sub '${Namespace}-outage-sms-notifications-batcher'
  SmsOutagesWrapperFunctionScheduledEventTrigger:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      Targets:
        - Id: SmsOutagesWrapperFunctionScheduledEventTriggerLambdaTarget
          Arn: !GetAtt 'SmsOutagesWrapperFunction.Arn'
  SmsOutagesWrapperFunctionScheduledEventTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: events.amazonaws.com
      FunctionName: !Ref 'SmsOutagesWrapperFunction'
      SourceArn: !GetAtt 'SmsOutagesWrapperFunctionScheduledEventTrigger.Arn'  
  HistoryOutagesWrapperFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-message-history-outages-wrapper'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.FetchListOfKeysFromS3Wrapper::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-message-history-outages-wrapper'
      Environment:
        Variables:
          OUTAGE_SUSTAINED_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-sustained-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_MOMENTARY_BUCKET: !Sub
            - '${Stage}-${Namespace}-outage-momentary-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          BUCKET_NM_TO_FETCH_KEYS: !Sub
            - '${Stage}-${Namespace}-notification-message-history-per-premise-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          LAMBDA_TO_INVOKE: !Sub '${Namespace}-outage-message-history-notifications-batcher'
  HistoryOutagesWrapperFunctionScheduledEventTrigger:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      Targets:
        - Id: HistoryOutagesWrapperFunctionScheduledEventTriggerLambdaTarget
          Arn: !GetAtt 'HistoryOutagesWrapperFunction.Arn'
  HistoryOutagesWrapperFunctionScheduledEventTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: events.amazonaws.com
      FunctionName: !Ref 'HistoryOutagesWrapperFunction'
      SourceArn: !GetAtt 'HistoryOutagesWrapperFunctionScheduledEventTrigger.Arn'
  ProcessOutagesStatisticsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-outage-alerts/target/cx-outage-alerts.jar
      FunctionName: !Sub '${Namespace}-outage-batch-statistics-aggregator'
      Handler: com.aep.cx.outage.alerts.aws.request.handlers.AggregateBatchStatistics::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-batch-statistics-aggregator'
      Environment:
        Variables:
          OUTAGE_BATCH_STATISTICS_BUCKET: !Sub
            - ${Stage}-${Namespace}-outage-batch-statistics-aggregator-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          AGGREGATOR_TIME_WINDOW: '10'
  # -----------------------------------------------------------------------------------
  # The Billing Lambdas start here!!!
  # -----------------------------------------------------------------------------------     
  ProcessBatchBillingFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-batch-landing'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.BillingAlertsLanding::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 360
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-batch-landing'
      Environment:
        Variables:
          BILLING_RAW_BUCKET: !Sub
            - '${Stage}-${Namespace}-billing-raw-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          PROFILE_RAW_BUCKET: !Sub
            - '${Stage}-${Namespace}-billing-profile-raw-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          LAMBDA_TO_INVOKE_BILLING:  !Sub '${Namespace}-billing-load-by-alertname'
  ProcessBillingPaymentFunction: 
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-payment-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessPayments::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-payment-processor'
      Environment:
        Variables:
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-customer-outage-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  BillingLoadByAlertnameFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-load-by-alertname'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.LoadBillingAlertsByType::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-load-by-alertname'
      Environment:
        Variables:
          ALERTS_RAW_PAYMENT: !Sub
            - '${Stage}-${Namespace}-billing-payment-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_ENROLLMENT: !Sub
            - '${Stage}-${Namespace}-billing-profile-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_BILLDUE: !Sub
            - '${Stage}-${Namespace}-billing-billdue-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_DISCONNECT_NOTICE: !Sub
            - '${Stage}-${Namespace}-billing-disconnect-notice-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_DISCONNECTED: !Sub
            - '${Stage}-${Namespace}-billing-disconnected-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_RECONNECTED: !Sub
            - '${Stage}-${Namespace}-billing-reconnected-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_CPP_ENROLLMENT: !Sub
            - '${Stage}-${Namespace}-billing-cpp-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_ORDER_TRACKING: !Sub
            - '${Stage}-${Namespace}-billing-ordertracking-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_RETURN_CHECK: !Sub
            - '${Stage}-${Namespace}-billing-return-check-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessBillingBilldueFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-process-billdue'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessBillDue::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 360
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-process-billdue'
      Environment:
        Variables:
          BILLING_RAW_BUCKET: !Sub
            - '${Stage}-${Namespace}-billing-raw-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          BILLING_BILLDUE_BUCKET: !Sub
            - '${Stage}-${Namespace}-billing-billdue-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-customer-outage-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessBillingDisconnectNoticeFunction: 
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-disconnect-notice-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessDisconnectNotice::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-disconnect-notice-processor'
      Environment:
        Variables:
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-customer-outage-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_DISCONNECT_NOTICE: !Sub
            - '${Stage}-${Namespace}-billing-disconnect-notice-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessBillingDisconnectedFunction: 
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-disconnected-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessDisconnected::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-disconnected-processor'
      Environment:
        Variables:
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-customer-outage-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_DISCONNECTED: !Sub
            - '${Stage}-${Namespace}-billing-disconnected-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessBillingReconnectedFunction: 
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-reconnected-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessReconnected::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-reconnected-processor'
      Environment:
        Variables:
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-customer-outage-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_RECONNECTED: !Sub
            - '${Stage}-${Namespace}-billing-reconnected-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessCPPFunction: 
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-cpp-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessCPPAlerts::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-cpp-processor'
      Environment:
        Variables:
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-customer-outage-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_CPP_ENROLLMENT: !Sub
            - '${Stage}-${Namespace}-billing-cpp-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessReturnCheckFunction: 
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-return-check-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessReturnCheck::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 600
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-return-check-processor'
      Environment:
        Variables:
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-customer-outage-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ALERTS_RAW_RETURN_CHECK: !Sub
            - '${Stage}-${Namespace}-billing-return-check-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
  ProcessSubscriptionsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-subscriptions-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessSubscriptions::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 360
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-subscriptions-processor'
      Environment:
        Variables:
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-order-preferences--${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
             
  ProcessOrderTrackingFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-billing-alerts/target/cx-billing-alerts.jar
      FunctionName: !Sub '${Namespace}-billing-ordertracking-processor'
      Handler: com.aep.cx.billing.alerts.lambda.handlers.ProcessOrderTracking::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 360
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-billing-ordertracking-processor'
      Environment:
        Variables:
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-order-preferences--${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_MESSAGE_HISTORY_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-message-history-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_SMS_BUCKET: !Sub
            - ${Stage}-${Namespace}-notification-sms-per-premise-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          NOTIFICATION_EMAIL_BUCKET: !Sub
             - ${Stage}-${Namespace}-notification-email-per-premise-${Region}
             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]             
             
  OnetimePreferencesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-preferences-onetime-processor'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.OnetimePreferences2S3::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 300
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-preferences-onetime-processor'
      Environment:
        Variables:
#          OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'
          BILLING_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-billing-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          POWERPAY_PREFERENCES_BUCKET: !Sub
            - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
          ORDER_PREFERENCES_BUCKET: !Sub
            - ${Stage}-${Namespace}-order-preferences-${Region}
            - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]             
#   ProcessPreferencesBatchLandingFunction:
#     Type: AWS::Lambda::Function
#     Properties:
#       Code: cx-billing-alerts/target/cx-billing-alerts.jar
#       FunctionName: !Sub '${Namespace}-preferences-batch-landing'
#       Handler: com.aep.cx.utils.alerts.aws.request.handlers.LoadPreferences2S3Handler::handleRequest
#       Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
#       Timeout: 360
#       Runtime: java8
#       MemorySize: 512
#       Tags: 
#         - Key: Name
#           Value: !Sub '${Namespace}-billing-batch-landing'
#       Environment:
#         Variables:
#           PREFERENCES_RAW_BUCKET: !Sub
#             - '${Stage}-${Namespace}-preferences-raw-${Region}'
#             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
#   PreferencesBatchProcessorFunction: 
#     Type: AWS::Lambda::Function
#     Properties:
#       Code: cx-billing-alerts/target/cx-billing-alerts.jar
#       FunctionName: !Sub '${Namespace}-preferences-batch-processor'
#       Handler: com.aep.cx.utils.alerts.aws.request.handlers.Preferences2DynamoDBHandler::handleRequest
#       Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
#       Timeout: 600
#       Runtime: java8
#       MemorySize: 512
#       Tags: 
#         - Key: Name
#           Value: !Sub '${Namespace}-preferences-batch-processor'
#       Environment:
#         Variables:
#           BILLING_PREFERENCES_BUCKET: !Sub
#             - ${Stage}-${Namespace}-billing-preferences-${Region}
#             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
#           POWERPAY_PREFERENCES_BUCKET: !Sub
#             - '${Stage}-${Namespace}-powerpay-preferences-${Region}'
#             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
#           ORDER_PREFERENCES_BUCKET: !Sub
#             - ${Stage}-${Namespace}-order-preferences-${Region}
#             - Region : !FindInMap [RegionMap, !Ref 'AWS::Region', REGION]
#           OUTAGE_PREFERENCES_DYNAMODBTABLE: !Sub '${Stage}_${Namespace}_customer_outage_preferences'                                         
  SqsMacssHistoryHandlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: cx-utils/target/cx-utils.jar
      FunctionName: !Sub '${Namespace}-outage-sqs-macss-history-handler'
      Handler: com.aep.cx.utils.alerts.aws.request.handlers.SQSMACSSHistoryHandler::handleRequest
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudAutomation'
      Timeout: 180
      Runtime: java8
      MemorySize: 512
      Tags: 
        - Key: Name
          Value: !Sub '${Namespace}-outage-sqs-macss-history-handler'
      Environment:
        Variables:
          DELIVERY_TYPE_EMAIL: EMAIL-DELIVERY
      VpcConfig:
        SecurityGroupIds: !FindInMap [Environment, !Ref Stage, SGs]
        SubnetIds: !FindInMap [Environment, !Ref Stage, Subnets]
